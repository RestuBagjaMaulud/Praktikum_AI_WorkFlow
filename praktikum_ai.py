# -*- coding: utf-8 -*-
"""praktikum_ai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/113nnZMa_qJ4xzonnlnmk_bmexiW0pUp5
"""



!pip install pandas

!pip install matplotlib

import pandas as pd

# Buat data penjualan toko
data = {
    "Tanggal": ["2025-02-01", "2005-02-01", "2025-02-02", "2025-02-02", "2025-02-03", "2025-02-03", "2025-02-04", "2025-02-04", "2025-02-05", "2025-02-05"],
    "Produk": ["Minyak Goreng", "Beras", "Gula", "Tepung", "Mie Instan", "Sabun", "Sampo", "Aqua", "Pepsodent", "Marjan"],
    "Jumlah Terjual": [10, 5, 7, 3, 12, 6, 15, 16, 5, 3],
    "Stok": [20, 15, 8, 12, 25, 13, 30, 26, 8, 7],
    "Harga Satuan": [15000, 12000, 13000, 11000, 3000, 20000, 15000, 13000, 5000, 10000],
}

# Simpan dalam DataFrame
df = pd.DataFrame(data)

# Simpan sebagai file CSV
df.to_csv("data_penjualan.csv", index=False)

print("File CSV berhasil dibuat dan disimpan sebagai 'data penjualan.csv'!")

# Membaca file CSV
df = pd.read_csv("data_penjualan.csv")

# Menampilkan 10 data pertama
print(df.head(10))

# Cek apakah ada data yang kosong
print(df.isnull().sum())

# Konversi kolom "Tanggal" ke formatdatetime
df["Tanggal"] = pd.to_datetime(df["Tanggal"])

#Tambahkan kolom "Total Penjualan"
df["Total Penjualan"] = df["Jumlah Terjual"] * df["Harga Satuan"]

#Tambahkan kolom "Keuntungan" (asumsi modal 10.000 per produk)
df["Keuntungan"] = df["Total Penjualan"] - (df["Jumlah Terjual"] * 10000)

#Menampilkan hasil transformasi
print(df.head(10))

!pip install scikit-learn

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Pilih fitur (X) dan target (y)
X = df[["Jumlah Terjual", "Stok"]]
y = (df["Stok"] < 5).astype(int) # 1 jika stok kurang dari 5, 0 jika cukup

# Split data menjadi train dan test
X_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#Buat model Decision Tree
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

#Evaluasi model
y_pred = model.predict(x_test)
print("Akurasi Model:", accuracy_score(y_test, y_pred))

# Contoh produk baru (jumlah terjual 8, stok tersisa 3)
produk_baru = [[8, 3]]
prediksi = model.predict(produk_baru)

if prediksi [0] == 1:
    print("Produk perlu di-restock!")
else:
    print("Stok masih cukup.")

import matplotlib.pyplot as plt

plt.scatter(df ["Jumlah Terjual"], df["Stok"], c=df["Keuntungan"], cmap="coolwarm")
plt.xlabel("Jumlah Terjual")
plt.ylabel("Stok")
plt.title("Analisis Penjualan dan Stok")
plt.colorbar (label="Keuntungan")
plt.show()